/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TourRouteImport } from './routes/tour'
import { Route as AppRouteImport } from './routes/_app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppSettingsRouteImport } from './routes/_app.settings'
import { Route as AppRemindersRouteImport } from './routes/_app.reminders'
import { Route as AppAssistantRouteImport } from './routes/_app.assistant'
import { Route as AppPeopleIndexRouteImport } from './routes/_app.people.index'
import { Route as AppPeoplePersonIDRouteImport } from './routes/_app.people.$personID'

const TourRoute = TourRouteImport.update({
  id: '/tour',
  path: '/tour',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AppRemindersRoute = AppRemindersRouteImport.update({
  id: '/reminders',
  path: '/reminders',
  getParentRoute: () => AppRoute,
} as any)
const AppAssistantRoute = AppAssistantRouteImport.update({
  id: '/assistant',
  path: '/assistant',
  getParentRoute: () => AppRoute,
} as any)
const AppPeopleIndexRoute = AppPeopleIndexRouteImport.update({
  id: '/people/',
  path: '/people/',
  getParentRoute: () => AppRoute,
} as any)
const AppPeoplePersonIDRoute = AppPeoplePersonIDRouteImport.update({
  id: '/people/$personID',
  path: '/people/$personID',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/tour': typeof TourRoute
  '/assistant': typeof AppAssistantRoute
  '/reminders': typeof AppRemindersRoute
  '/settings': typeof AppSettingsRoute
  '/people/$personID': typeof AppPeoplePersonIDRoute
  '/people': typeof AppPeopleIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/tour': typeof TourRoute
  '/assistant': typeof AppAssistantRoute
  '/reminders': typeof AppRemindersRoute
  '/settings': typeof AppSettingsRoute
  '/people/$personID': typeof AppPeoplePersonIDRoute
  '/people': typeof AppPeopleIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/tour': typeof TourRoute
  '/_app/assistant': typeof AppAssistantRoute
  '/_app/reminders': typeof AppRemindersRoute
  '/_app/settings': typeof AppSettingsRoute
  '/_app/people/$personID': typeof AppPeoplePersonIDRoute
  '/_app/people/': typeof AppPeopleIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/tour'
    | '/assistant'
    | '/reminders'
    | '/settings'
    | '/people/$personID'
    | '/people'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/tour'
    | '/assistant'
    | '/reminders'
    | '/settings'
    | '/people/$personID'
    | '/people'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/tour'
    | '/_app/assistant'
    | '/_app/reminders'
    | '/_app/settings'
    | '/_app/people/$personID'
    | '/_app/people/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  TourRoute: typeof TourRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tour': {
      id: '/tour'
      path: '/tour'
      fullPath: '/tour'
      preLoaderRoute: typeof TourRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/reminders': {
      id: '/_app/reminders'
      path: '/reminders'
      fullPath: '/reminders'
      preLoaderRoute: typeof AppRemindersRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/assistant': {
      id: '/_app/assistant'
      path: '/assistant'
      fullPath: '/assistant'
      preLoaderRoute: typeof AppAssistantRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/people/': {
      id: '/_app/people/'
      path: '/people'
      fullPath: '/people'
      preLoaderRoute: typeof AppPeopleIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/people/$personID': {
      id: '/_app/people/$personID'
      path: '/people/$personID'
      fullPath: '/people/$personID'
      preLoaderRoute: typeof AppPeoplePersonIDRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppAssistantRoute: typeof AppAssistantRoute
  AppRemindersRoute: typeof AppRemindersRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppPeoplePersonIDRoute: typeof AppPeoplePersonIDRoute
  AppPeopleIndexRoute: typeof AppPeopleIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAssistantRoute: AppAssistantRoute,
  AppRemindersRoute: AppRemindersRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppPeoplePersonIDRoute: AppPeoplePersonIDRoute,
  AppPeopleIndexRoute: AppPeopleIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  TourRoute: TourRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
